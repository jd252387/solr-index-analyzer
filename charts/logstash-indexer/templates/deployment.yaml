apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logstash-indexer.fullname" . }}
  labels:
    {{- include "logstash-indexer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "logstash-indexer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "logstash-indexer.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "logstash-indexer.serviceAccountName" . }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.extraInitContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: logstash
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- $kafkaSaslEnv := include "logstash-indexer.renderSecretEnv" .Values.pipeline.kafka.sasl.password -}}
          {{- $kafkaTruststoreEnv := include "logstash-indexer.renderSecretEnv" .Values.pipeline.kafka.ssl.truststorePassword -}}
          {{- $kafkaKeystoreEnv := include "logstash-indexer.renderSecretEnv" .Values.pipeline.kafka.ssl.keystorePassword -}}
          {{- $esPasswordEnv := include "logstash-indexer.renderSecretEnv" .Values.output.elasticsearch.password -}}
          {{- $esApiKeyEnv := include "logstash-indexer.renderSecretEnv" .Values.output.elasticsearch.apiKey -}}
          {{- $solrPasswordEnv := include "logstash-indexer.renderSecretEnv" .Values.output.solr.password -}}
          {{- $hasEnv := or (ne $kafkaSaslEnv "") (ne $kafkaTruststoreEnv "") (ne $kafkaKeystoreEnv "") (ne $esPasswordEnv "") (ne $esApiKeyEnv "") (ne $solrPasswordEnv "") (gt (len .Values.extraEnv) 0) -}}
          {{- if $hasEnv }}
          env:
            {{- if ne $kafkaSaslEnv "" }}
{{ $kafkaSaslEnv | indent 12 }}
            {{- end }}
            {{- if ne $kafkaTruststoreEnv "" }}
{{ $kafkaTruststoreEnv | indent 12 }}
            {{- end }}
            {{- if ne $kafkaKeystoreEnv "" }}
{{ $kafkaKeystoreEnv | indent 12 }}
            {{- end }}
            {{- if ne $esPasswordEnv "" }}
{{ $esPasswordEnv | indent 12 }}
            {{- end }}
            {{- if ne $esApiKeyEnv "" }}
{{ $esApiKeyEnv | indent 12 }}
            {{- end }}
            {{- if ne $solrPasswordEnv "" }}
{{ $solrPasswordEnv | indent 12 }}
            {{- end }}
            {{- range .Values.extraEnv }}
{{ toYaml . | indent 12 }}
            {{- end }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
          envFrom:
{{ toYaml . | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: config
              mountPath: /usr/share/logstash/config/pipelines.yml
              subPath: pipelines.yml
            - name: pipeline
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
            - name: ruby-scripts
              mountPath: /usr/share/logstash/pipeline/scripts
            {{- range .Values.extraVolumeMounts }}
{{ toYaml . | indent 12 }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- with .Values.extraContainers }}
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "logstash-indexer.fullname" . }}-config
        - name: pipeline
          configMap:
            name: {{ include "logstash-indexer.fullname" . }}-pipeline
        - name: ruby-scripts
          configMap:
            name: {{ include "logstash-indexer.fullname" . }}-ruby
{{- range .Values.extraVolumes }}
{{ toYaml . | indent 8 }}
{{- end }}
